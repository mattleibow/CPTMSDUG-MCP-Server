name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  pack:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET 10
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'
        
    - name: Extract version from tag
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$TAG_VERSION" >> $GITHUB_ENV
        
    - name: Update package version
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${VERSION}<\/Version>/" src/Cptmsdug.McpServer/Cptmsdug.McpServer.csproj
        
    - name: Restore dependencies
      run: dotnet restore src/Cptmsdug.sln
      
    - name: Build solution
      run: dotnet build src/Cptmsdug.sln --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test src/Cptmsdug.Core.Tests/ --configuration Release --no-build --verbosity normal
      
    - name: Pack .NET tool
      run: dotnet pack src/Cptmsdug.McpServer/Cptmsdug.McpServer.csproj --configuration Release --no-build --output ./release-artifacts
      
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-packages
        path: ./release-artifacts/*.nupkg
        retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: pack
    permissions:
      contents: write
      packages: write
    steps:
    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-packages
        path: ./release-artifacts
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./release-artifacts/*.nupkg
        generate_release_notes: true
        draft: false
        prerelease: false
        
    - name: Publish to NuGet.org
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        if [[ -n "$NUGET_API_KEY" ]]; then
          dotnet nuget push ./release-artifacts/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
        else
          echo "⚠️ NUGET_API_KEY secret not found. Skipping NuGet.org publication."
        fi