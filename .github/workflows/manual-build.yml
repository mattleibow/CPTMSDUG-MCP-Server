name: Manual Build

on:
  workflow_dispatch:
    inputs:
      create_package:
        description: 'Create NuGet package'
        required: false
        default: 'true'
        type: boolean

jobs:
  manual-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET 10 (when available)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'
      continue-on-error: true
      id: dotnet10
      
    - name: Setup .NET 9 (current latest)
      if: steps.dotnet10.outcome == 'failure'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Check .NET version and target framework compatibility
      run: |
        echo "Installed .NET version:"
        dotnet --version
        echo "Available SDKs:"
        dotnet --list-sdks
        echo ""
        if [[ "${{ steps.dotnet10.outcome }}" == "failure" ]]; then
          echo "⚠️  .NET 10 is not yet available. The projects target net10.0 but will need to be updated to use an available framework version."
          echo "📋 When .NET 10 becomes available, this pipeline will automatically use it."
        else
          echo "✅ .NET 10 is available and ready to use."
        fi
        
    - name: Restore dependencies
      run: dotnet restore src/Cptmsdug.sln
      continue-on-error: true
      id: restore
      
    - name: Build solution
      if: steps.restore.outcome == 'success'
      run: dotnet build src/Cptmsdug.sln --configuration Release --no-restore
      continue-on-error: true
      id: build
      
    - name: Run tests
      if: steps.build.outcome == 'success'
      run: dotnet test src/Cptmsdug.Core.Tests/ --configuration Release --no-build --verbosity normal
      continue-on-error: true
      id: test
      
    - name: Pack .NET tool
      if: steps.build.outcome == 'success' && inputs.create_package == true
      run: dotnet pack src/Cptmsdug.McpServer/Cptmsdug.McpServer.csproj --configuration Release --no-build --output ./manual-artifacts
      continue-on-error: true
      id: pack
      
    - name: Build status summary
      run: |
        echo "📊 Manual Build Summary:"
        echo "======================="
        echo "🔧 Restore: ${{ steps.restore.outcome }}"
        echo "🏗️  Build:   ${{ steps.build.outcome }}"
        echo "🧪 Tests:   ${{ steps.test.outcome }}"
        if [[ "${{ inputs.create_package }}" == "true" ]]; then
          echo "📦 Pack:    ${{ steps.pack.outcome }}"
        else
          echo "📦 Pack:    skipped (not requested)"
        fi
        echo ""
        if [[ "${{ steps.restore.outcome }}" != "success" ]]; then
          echo "❌ Build failed at restore step - likely due to .NET 10 target framework not being available yet."
          echo "💡 Once .NET 10 preview is released, this pipeline will work automatically."
        elif [[ "${{ steps.build.outcome }}" != "success" ]]; then
          echo "❌ Build compilation failed."
        elif [[ "${{ steps.test.outcome }}" != "success" ]]; then
          echo "❌ Tests failed."
        elif [[ "${{ inputs.create_package }}" == "true" && "${{ steps.pack.outcome }}" != "success" ]]; then
          echo "❌ Packaging failed."
        else
          echo "✅ All requested steps completed successfully!"
        fi
      
    - name: Upload package artifacts
      if: steps.pack.outcome == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: manual-build-packages
        path: ./manual-artifacts/*.nupkg
        retention-days: 7